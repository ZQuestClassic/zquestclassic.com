<!doctype html>
<html lang="{{ metadata.language }}">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<title>{{ title or metadata.title }}</title>
		<meta name="description" content="{{ description or metadata.description }}">

		<link href="/fonts/CrimsonText/CrimsonText-Regular-subset.woff2" rel="preload" as="font" type="font/ttf" crossorigin>
		<link href="/fonts/CrimsonText/CrimsonText-Bold-subset.woff2" rel="preload" as="font" type="font/ttf" crossorigin>
		<link rel="icon" href="/img/favicon.png">

		{#- Atom and JSON feeds included by default #}
		<link rel="alternate" href="/feed/feed.xml" type="application/atom+xml" title="{{ metadata.title }}">
		<link rel="alternate" href="/feed/feed.json" type="application/json" title="{{ metadata.title }}">

		{#- Uncomment this if youâ€™d like folks to know that you used Eleventy to build your site!  #}
		{#- <meta name="generator" content="{{ eleventy.generator }}"> #}

		{#-
		CSS bundles are provided via the `eleventy-plugin-bundle` plugin:
		1. You can add to them using `{% css %}`
		2. You can get from them using `{% getBundle "css" %}` or `{% getBundleFileUrl "css" %}`
		3. You can do the same for JS: {% js %}{% endjs %} and <script>{% getBundle "js" %}</script>
		4. Learn more: https://github.com/11ty/eleventy-plugin-bundle
		#}

		{#- Add the contents of a file to the bundle #}
		{%- css %}{% include "public/css/index.css" %}{% endcss %}
		{%- css %}{% include "public/css/nav.css" %}{% endcss %}
		{#- Or add from node_modules #}
		{# {%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %} #}

		{# Only include the syntax highlighter CSS on blog posts #}
		{%- css %}{% include "node_modules/prismjs/themes/prism-okaidia.css" %}{% endcss %}
		{%- css %}{% include "node_modules/@splidejs/splide/dist/css/splide.min.css" %}{% endcss %}
		{%- css %}{% include "public/css/prism-diff.css" %}{%- endcss %}

		{#- Render the CSS bundle using Inlined CSS (for the fastest site performance in production) #}
		<style>{% getBundle "css" %}</style>
		{#- Renders the CSS bundle using a separate file, if you can't set CSP directive style-src: 'unsafe-inline' #}
		{#- <link rel="stylesheet" href="{% getBundleFileUrl "css" %}"> #}

		{%- js %}{% include "public/js/index.js" %}{%- endjs %}
		{%- js %}{% include "public/js/nav.js" %}{%- endjs %}
		{%- js %}{% include "node_modules/@splidejs/splide/dist/js/splide.js" %}{%- endjs %}
		{# <script src="{% getBundleFileUrl "js" %}"></script> #}
		<script>
			{% getBundle "js" %}
		</script>
	</head>
	<body>
		<header>
			<div class="nav-container">
				<div class="title-slogan">
					<a href="/" class="home-link">{{ metadata.title }}</a>
					<span>The Classic Adventure Game Engine</span>
				</div>

				<nav class="nav">
					<a class="nav-item" href="/releases/"{% if '/releases' == page.url %} aria-current="page"{% endif %}>Get ZC!</a>
				{%- for entry in collections.all | eleventyNavigation %}
					<a class="nav-item" href="{{ entry.url }}"{% if entry.url == page.url %} aria-current="page"{% endif %}>{{ entry.title }}</a>
				{%- endfor %}
				</nav>
			</div>

			{% block header %}
				{{ header | safe }}
			{% endblock %}
		</header>

		<main class="{% if page.url == "/releases/" or page.url == "/docs/" or page.url == "/news/" %}narrow{% endif %}">
			{% block content %}
				<div>
					<div class="nav-wrapper">
						<nav class="toc">
							<svg class="toc-marker" width="200" height="200" xmlns="http://www.w3.org/2000/svg">
								<path stroke="#b3c115" stroke-width="3" fill="transparent" stroke-dasharray="0, 0, 0, 1000" stroke-linecap="round" stroke-linejoin="round" transform="translate(-0.5, -0.5)" />
							</svg>
						</nav>
	
						<div class="content">
							<div>
								{{ content | safe }}
							</div>
						</div>
					</div>
				</div>
			{% endblock %}
		</main>

		<footer></footer>

		<!-- Current page: {{ page.url | htmlBaseUrl }} -->

		<script async src="https://www.googletagmanager.com/gtag/js?id=G-36Y8HGSBRW"></script>
		<script>
			window.dataLayer = window.dataLayer || [];
			function gtag() { dataLayer.push(arguments); }
			gtag('js', new Date());

			gtag('config', 'G-36Y8HGSBRW');
		</script>
	</body>
</html>
